print "MOD4";
alias funNum R1;
alias currentPID R2;
alias word R3;

if (funNum == 1) then
        // Disk Store
        alias pageNum R3;
        alias blockNum R4;

        multipush(R1,R2,R3,R4);
        R1 = 3;
        R2 = currentPID;
        call MOD_0;
        multipop(R1,R2,R3,R4);

        [DISK_STATUS_TABLE + 1] = 1;
        [DISK_STATUS_TABLE + 2] = pageNum;
        [DISK_STATUS_TABLE + 3] = blockNum;

        store(pageNum,blockNum);

        [PROCESS_TABLE + currentPID * 16 + 4] = WAIT_DISK;
        
	multipush(R1,R2,R3,R4); 
        call MOD_5;
        multipop(R1,R2,R3,R4);

	return;
endif;

if (funNum == 2) then
    	// Disk Load
    	alias pageNum R3;
    	alias blockNum R4;
    
    	multipush(R1,R2,R3,R4);
    	R1 = 3;
    	R2 = currentPID;
    	call MOD_0;
    	multipop(R1,R2,R3,R4);

    	[DISK_STATUS_TABLE + 1] = 0;
    	[DISK_STATUS_TABLE + 2] = pageNum;
    	[DISK_STATUS_TABLE + 3] = blockNum;

    	load(pageNum,blockNum);
        
    	[PROCESS_TABLE + currentPID * 16 + 4] = WAIT_DISK;
	
	multipush(R1,R2,R3,R4);
    	call MOD_5;
	multipop(R1,R2,R3,R4);
	
    	return;
endif;

if (funNum == 3) then
    	// Terminal Write

    	multipush(R1, R2, R3);
    	R1 = 8;
   	call MOD_0;
    	multipop(R1, R2, R3);

    	print word;

    	multipush(R1, R2, R3);
    	R1 = 9;
    	call MOD_0;
    	multipop(R1, R2, R3);

    	return;
endif;

if (funNum == 4) then
    	// Terminal Read

    	multipush(R1, R2, R3);
    	R1 = 8;
    	call MOD_0;
    	multipop(R1, R2, R3);

    	read;

    	[PROCESS_TABLE + currentPID * 16 + 4] = WAIT_TERMINAL;

    	multipush(R1, R2, R3);
    	call MOD_5;
    	multipop(R1, R2, R3);

    	[[PTBR + 2 * (word / 512)] * 512 + (word % 512)] = [PROCESS_TABLE + currentPID * 16 + 8];
    
    	return;
endif;
