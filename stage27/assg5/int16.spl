alias userSP R1;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;

alias syscall R2;
syscall = [[PTBR + 2 * (userSP - 5) / 512] * 512 + (userSP - 5) % 512];

alias returnAddress R3;
returnAddress = [PTBR + 2 * (userSP - 1) / 512] * 512 + (userSP - 1) % 512;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = syscall;

if (syscall == 22)then
        // Newusr
        alias userName R4;
        userName = [[PTBR + 2 * (userSP - 4) / 512] * 512 + (userSP - 4) % 512];

        alias passWord R5;
        passWord = [[PTBR + 2 * (userSP - 3) / 512] * 512 + (userSP - 3) % 512];
        
        if ([SYSTEM_STATUS_TABLE + 0] != ROOT || [SYSTEM_STATUS_TABLE + 1] != 2) then
                [returnAddress] = -2;
        else
                alias i R6;
                i = 0;

                alias found R7;
                found = 0;

                alias userID R8;
                userID = -1;
                
                while (i < MAX_USER_NUM) do
                        if ([USER_TABLE + i * 2] == userName) then
                                found = 1;
                                break;
                        endif;
                        if ([USER_TABLE + i * 2] == -1 && userID == -1) then
                                userID = i;
                        endif;
                        i = i + 1;
                endwhile;

                if (found == 1) then
                        [returnAddress] = -1;
                else if (userID == -1) then
                        [returnAddress] = -3;
                else
                        encrypt passWord;

                        [USER_TABLE + userID * 2 + 0] = userName;
                        [USER_TABLE + userID * 2 + 1] = passWord;

                        [PROCESS_TABLE + [PROCESS_TABLE + 2 * 16 + 2] * 16 + 9] = 0;

                        [returnAddress] = 0;
                endif;
                endif;
        endif;
else if (syscall == 23) then
        // Remusr
        alias userName R4;
        userName = [[PTBR + 2 * (userSP - 4) / 512] * 512 + (userSP - 4) % 512];

        if ([SYSTEM_STATUS_TABLE + 0] != ROOT || [SYSTEM_STATUS_TABLE + 1] != 2 || userName == "root" || userName == "kernel") then
                [returnAddress] = -2;
        else
                alias i R5;
                i = 0;
                
                while (i < MAX_USER_NUM) do
                        if ([USER_TABLE + i * 2] == userName) then
                                break;
                        endif;
                        i = i + 1;
                endwhile;

                if (i == MAX_USER_NUM) then
                        [returnAddress] = -1;
                else
                        alias j R6;
                        j = 0;
                        while(j < MAX_FILE_NUM) do
                                if ([ROOT_FILE + j * 8 + 3] == userName) then
                                        [returnAddress] = -3;
                                        break;
                                endif;
                                j = j + 1;
                        endwhile;

                        if (j == MAX_FILE_NUM) then
                                [USER_TABLE + i * 2 + 0] = -1;
                                [USER_TABLE + i * 2 + 1] = -1;

                                [PROCESS_TABLE + [PROCESS_TABLE + 2 * 16 + 2] * 16 + 9] = 0;

                                [returnAddress] = 0;
                        endif;
                endif;
        endif;
else if (syscall == 24) then
        // Setpwd
        alias userName R4;
        userName = [[PTBR + 2 * (userSP - 4) / 512] * 512 + (userSP - 4) % 512];

        alias passWord R5;
        passWord = [[PTBR + 2 * (userSP - 3) / 512] * 512 + (userSP - 3) % 512];

        if ([SYSTEM_STATUS_TABLE + 1] != 2) then
                [returnAddress] = -1;
        else
                alias userID R6;
                userID = 0;
                while (userID < MAX_USER_NUM) do
                        if ([USER_TABLE + userID * 2] == userName) then
                                break;
                        endif;
                        userID = userID + 1;
                endwhile;

                if (userID == MAX_USER_NUM) then
                        [returnAddress] = -2;
                else
                        if (userID != [PROCESS_TABLE + 2 * 16 + 3] && [SYSTEM_STATUS_TABLE + 0] != ROOT) then
                                [returnAddress] = -1;
                        else
                                encrypt passWord;
                                [USER_TABLE + userID * 2 + 1] = passWord;

                                [PROCESS_TABLE + [PROCESS_TABLE + 2 * 16 + 2] * 16 + 9] = 0;

                                [returnAddress] = 0;
                        endif;
                endif;
        endif;
else if (syscall == 26) then
        // Getuid
        alias userName R4;
        userName = [[PTBR + 2 * (userSP - 4) / 512] * 512 + (userSP - 4) % 512];

        alias userID R5;
        userID = 0;

        while (userID < MAX_USER_NUM) do
                if ([USER_TABLE + userID * 2] == userName) then
                        break;
                endif;
                userID = userID + 1;
        endwhile;

        if (userID == MAX_USER_NUM) then
                [returnAddress] = -1;
        else
                [returnAddress] = userID;
        endif;
else if (syscall == 25) then
        // Getuname
        alias userID R4;
        userID = [[PTBR + 2 * (userSP - 4) / 512] * 512 + (userSP - 4) % 512];

        if (userID < 0 || userID > 15) then
                [returnAddress] = -1;
        else if ([USER_TABLE + userID * 2 + 0] == -1) then
                [returnAddress] = -1;
        else
                [PROCESS_TABLE + [PROCESS_TABLE + 2 * 16 + 2] * 16 + 9] = 0;
                [returnAddress] = [USER_TABLE + userID * 2 + 0];
        endif;
        endif;
endif;
endif;
endif;
endif;
endif;

SP = userSP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
ireturn;
