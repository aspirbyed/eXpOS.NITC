alias functionNum R1;
alias currentPID R2;

if (functionNum == 3) then
    // Acquire Disk
    while ([DISK_STATUS_TABLE + 0] == 1) do
	[PROCESS_TABLE + currentPID * 16 + 4] = WAIT_DISK;
	multipush(R1,R2);
        call MOD_5;
        multipop(R1,R2);
    endwhile;

    [DISK_STATUS_TABLE + 0] = 1;
    [DISK_STATUS_TABLE + 4] = currentPID;

    return;
endif;
if (functionNum == 8) then
    // Acquire Terminal
    while ([TERMINAL_STATUS_TABLE + 0] == 1) do
        [PROCESS_TABLE + (currentPID * 16) + 4] = WAIT_TERMINAL;
        multipush(R1,R2);
        call MOD_5;
        multipop(R1,R2);
    endwhile;
    [TERMINAL_STATUS_TABLE + 0] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currentPID;
    return;
endif;
if (functionNum == 9) then
    // Release Terminal
    alias i R0;
    if (currentPID != [TERMINAL_STATUS_TABLE + 1]) then
        i = -1;
        return;
    else
        [TERMINAL_STATUS_TABLE + 0] = 0;
        i = 0;
        while (i < 16) do
            if ([PROCESS_TABLE + i * 16 + 4] == WAIT_TERMINAL) then
                [PROCESS_TABLE + i * 16 + 4] = READY;
            endif;
            i = i + 1;
        endwhile;
        i = 0;
	return;
    endif;
else
    alias i R0;
    i = -1;
    return;
endif;
