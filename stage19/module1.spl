alias funNum R1;
alias pid R2;

if (funNum == 2) then
	// Free User Area Page
	
	multipush(R1,R2);

	R1 = 2;
	R2 = [PROCESS_TABLE + pid * 16 + 11];	

	call MOD_2;	

	multipop(R1,R2);

	return;
endif; 
if (funNum == 3) then
	// Exit Process
	
	multipush(R1,R2);
	
	R1 = 4;
	R2 = pid;
	call MOD_1;

	multipop(R1,R2);

	multipush(R1,R2);

        R1 = 2;
	R2 = pid;
        call MOD_1;

        multipop(R1,R2);
	
	[PROCESS_TABLE + pid * 16 + 4] = TERMINATED;	

	return;
endif;
if (funNum == 4) then
	// Free Page Table

	[PAGE_TABLE_BASE + pid * 20 + 0] = -1;
	[PAGE_TABLE_BASE + pid * 20 + 1] = "0000";
	[PAGE_TABLE_BASE + pid * 20 + 2] = -1;
	[PAGE_TABLE_BASE + pid * 20 + 3] = "0000";

	alias i  R3;		
	i = 4;
	while (i < 20) do
		if ([PAGE_TABLE_BASE + pid * 20 + i] != -1) then
			multipush(R1,R2,R3);
        		R1 = 2;
			R2 = [PAGE_TABLE_BASE + pid * 20 + i];
        		call MOD_2;
        		multipop(R1,R2,R3);
		endif;
		[PAGE_TABLE_BASE + pid * 20 + i] = -1;
		i = i + 1;
		[PAGE_TABLE_BASE + pid * 20 + i] = "0000";
		i = i + 1;
	endwhile;
	
	i = 2;
	while (i < 10) do
		if ((i <= 3 || i >= 8) && [DISK_MAP_TABLE + 10 * pid + i] != -1) then
                	multipush(R1,R2,R3);
                	R1 = 4;
                	R2 = [DISK_MAP_TABLE + 10 * pid + i];
                	call MOD_2;
                	multipop(R1,R2,R3);
        	endif;
		[DISK_MAP_TABLE + 10 * pid + i] = -1;
		i = i + 1;
	endwhile;
	return;
endif;
